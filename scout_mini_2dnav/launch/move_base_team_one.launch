<launch>

  <arg name="use_static_map" default="true"/>

  <arg name="base_global_planner" default="global_planner/GlobalPlanner"/>
  <arg name="base_local_planner" default="base_local_planner/TrajectoryPlannerROS"/>
  <!-- <arg name="base_local_planner" default="dwa_local_planner/DWAPlannerROS"/> -->
  <node pkg="move_base" type="move_base" respawn="false" name="move_base" clear_params="true" output="screen">

    <rosparam file="$(find scout_mini_2dnav)/config/move_base.yaml" command="load" />

    <!-- planner -->
    <param name="base_global_planner" value="$(arg base_global_planner)"/>
    <param name="base_local_planner" value="$(arg base_local_planner)"/>
    <rosparam file="$(find scout_mini_2dnav)/config/planner.yaml" command="load"/>

    <!-- observation sources located in costmap_common.yaml -->
    <rosparam file="$(find scout_mini_2dnav)/config/costmap_common.yaml" command="load" ns="global_costmap" />
    <rosparam file="$(find scout_mini_2dnav)/config/costmap_common.yaml" command="load" ns="local_costmap" />

    <!-- static global costmap, static map provides size -->
    <rosparam file="$(find scout_mini_2dnav)/config/costmap_global_static.yaml" command="load" ns="global_costmap" if="$(arg use_static_map)"/>
    <param name="global_costmap/width" value="10.0" if="$(arg use_static_map)"/>
    <param name="global_costmap/height" value="10.0" if="$(arg use_static_map)"/>

    <!-- global costmap with laser, for odom_navigation_demo -->
    <rosparam file="$(find scout_mini_2dnav)/config/costmap_global_laser.yaml" command="load" ns="global_costmap" unless="$(arg use_static_map)"/>
    <param name="global_costmap/width" value="100.0" unless="$(arg use_static_map)"/>
    <param name="global_costmap/height" value="100.0" unless="$(arg use_static_map)"/>

    <!-- local costmap, needs size -->
    <rosparam file="$(find scout_mini_2dnav)/config/costmap_local.yaml" command="load" ns="local_costmap" />
    <param name="local_costmap/width" value="3.0"/>
    <param name="local_costmap/height" value="3.0"/>
  </node>
</launch>
